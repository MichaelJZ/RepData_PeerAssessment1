download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","American Community Survey Idaho.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","American Community Survey Idaho.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","American Community Survey Idaho.csv")
?xpathSApply
xpathSApply(rootNode,"//zipcode",xmlValue)
?xmlTODataFrame()
?xmlToDataFrame()
?getNodeSet()
xpathSApply(rootNode[[1]][[1]],"//zipcode",xmlValue)
?xmlToList
l<-xmlToList(BRest)
View(l)
l$zipcode
summary(l)
BRest(fileUrl,useInternal=T)
BRest<-xmlTreeParse(fileUrl,useInternal=T)
fileurl
fileUrl
fileURL<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
BRest<-xmlTreeParse(fileUrl,useInternal=T)
BRest<-xmlTreeParse(fileURl,useInternal=T)
BRest<-xmlTreeParse(fileURL,useInternal=T)
n<-getNodeSet(BRest,'//zipcode')
n
xmlPathSApply(rootNode,'//zipcode',xmlValue)
xmlpathSApply(rootNode,'//zipcode',xmlValue)
xpathSApply(rootNode,'//zipcode',xmlValue)
xpathSApply(rootNode,'\\zipcode',xmlValue)
n
n[n==21231]
n[1]
n[1]==21231
n[[1]]==21231
xmlToDataFrame(n)
b<-xmlToDataFrame(n)
b[b==21231]
class(b)
b[1==21231
b[1]==21231
b==21231
sum(b==21231)
xmlpathSApply(rootNode,'//zipcode',xmlValue)
xpathSApply(rootNode,'//zipcode',xmlValue)
rootNode=xmlRoot(BRest)
rootNode
rootNode=xmlRoot(BRest)
xpathSApply(rootNode,'//zipcode',xmlValue)
rootNode<-xmlRoot(Brest)
rootNode<-xmlRoot(BRest)
xpathSApply(rootNode,'//zipcode',xmlValue)
a<-xpathSApply(rootNode,'//zipcode',xmlValue)
class(a)
a<-as.numeric(a)
a==21231
sum(a==21231)
?fread()
?max()
?max
?fread
install.packages("data.table")
?fread
library(data.table)
?fread
DT<-fread("American Community Sruvey Idaho.csv")
DT<-fread("American Community Survey Idaho.csv")
class(DT)
DT$pwgtp15
?data.table
a<-data.frame("li"=c(1,2,3),"lo"=c("a","b","c"))
a
a[1]
a[1,1]
a[1,2]
b<-data.frame("li"=c(1,2,3),"lo"=c("a","b","c"))
b<-data.table("li"=c(1,2,3),"lo"=c("a","b","c"))
b[1]
b[1,2]
b[c(1,2)]
a[c(1,2)]
?list
list("a",1,"TRUE")
b
b[w:=lo]
b[,w:=lo]
b
a<-b
b[,z:=1]
b
a
a<-b
b
a
b[,x:=2]
a
a<-x
a
x=1
a
ax<-1
a
x<-1
a
?copy
a<-copy(b)
a
b
b[,q:=2]
b
a
data.table
?data.table
head(survey,1)
head(survey,1)
b
b[,{1}]
b[,{1,2,3}]
b[,{(1,2,3)}]
b[,{(1,2,3)}]
b[,{c(1,2,3)}]
b[,{c(2,3)}]
b[,{c(2,1,3)}]
b[1]
b[,1]
b["lo"]
?tapply
tapply(DT$pwgtp15,DT$SEX,mean)
DT[,mean(pwgtp15),by=SEX]
b[,"lo"]
b[,mean(lo)]
b[,mean(li)]
b[,li]
b[,lo]
b[,2]
b[,c(lo,li)]
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?transform
f<-rep(1:2,each=50)
f
f<-factor(f)
f
f<-factor(f,labels=c("Group 1", "Group 2"))
f
f<-rep(1:2,each=50)
f<-factor(f,labels=c("Group 1", "Group 2"))
f
f<-rep(10:1,each=50)
f
f<-rep(0:1,each=50)
f
f<-factor(f,labels=c("Group 1", "Group 2"))
f
library(lattice)
?trellis.par.set()
?print.trellis
?splom
install.packages()
?ggplot
?ggplot2
install.packages("ggplot2")
library(dataset)
library(datasets)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
>qplot
?qplot
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
library("httr", lib.loc="C:/Users/Owner/Documents/R/win-library/3.1")
?strptime
class(strptime("2007-2-1"))
class(strptime("2007-2-1",format="%Y-%m-%d %H:%M:%S"))
x<-rbinom(10000,1)
x<-rbinom(10000,1,.5)
y<-exp(x)
plot(y)
x<-rnorm(10000,1,.5)
plot(y)
y<-exp(x)
plot(y)
?rnorm
x<-rnorm(10000)
y<-exp(x)
plot(y)
hist(y)
x<-rnorm(10000,5000,10)
y<-exp(x)
hist(y)
?hist
hist(y,breaks=4990:5010)
hist(y,breaks=4990:5100)
hist(y)
hist(y,breaks=1:10000)
y
e^5000
exp(5000)
x<-rnorm(10000,100,10)
y<-exp(x)
y
hist(y)
hist(y,breaks<-1:150)
hist(y,xlim=c(10,150))
exp(100)
hist(y,xlim=c(exp(70),exp(130))
)
hist(y,xlim=c(exp(0),exp(130))
hist(y,xlim=c(exp(0),exp(200))
hist(y,xlim=c(exp(0),exp(200)))
hist(y,xlim=c(exp(0),exp(100)))
hist(y,xlim=c(exp(0),exp(10)))
y
hist(y)
hist(y,xmax=exp(100))
x<-rnorm(10000)
x<-rnorm(10000)
y<-exp(x)
hist(y)
x<-rnorm(10000,10)
y<-exp(x)
hist(y)
x<-rnorm(10000,100)
hist(y)
y<-exp(x)
hist(y)
hist(y,xlim=0:exp(100))
x<-rnorm(10000,10)
y<-exp(x)
hist(y)
hist(y,xlim=0:200000))
hist(y,xlim=0:200000)
0:20:2
0:20
0:2:20
100*0:20
hist(y,xlim=1000*0:200000)
hist(y,xlim<-(1000*0:200000))
hist(y,xlim<-(10000*0:200000))
?rnorm
x<-rnorm(10000,5,1)
y<-exp(x)
y
hist(y)
hist(y,breaks<-100*0:7)
range(y)
hist(y,breaks<-100*0:7,xlim<-c(0,700))
hist(y)
hist(y,xlim=c(0,700))
hist(y,xlim=c(0,400))
hist(y,xlim=c(0,400),breaks<-c(100*0:400))
x
exp(5)
hist(y,xlim=c(0,400),breaks<-c(20*0:10))
hist(y,xlim=c(0,400),breaks<-c(20*0:50))
hist(y,xlim=c(0,400),breaks<-c(20*0:100))
hist(y,xlim=c(0,400),breaks<-c(100*0:400))
hist(y,xlim=c(0,400),breaks<-c(20*0:100000))
hist(y,xlim=c(0,400),breaks<-c(10*0:100000))
x<-rnorm(10000)
y<-exp(x)
hist(y)
hist(y,xlim=c(0,10),breaks<-1:10)
hist(y,xlim=c(0,10),breaks<-1:100)
hist(y,xlim=c(0,10),breaks<-1:1000)
hist(y,xlim=c(0,10),breaks<-1:10000)
hist(y,xlim=c(0,10),breaks<-1:100000)
hist(y,xlim=c(0,10),breaks<-1:10000000)
hist(y,xlim=c(0,10))
range(y)
hist(y,xlim=c(0,10),0:60)
hist(y,xlim=c(0,10),.5*0:60)
hist(y,xlim=c(0,10),.5*0:120)
hist(y,xlim=c(0,5),.1*0:600)
?hclust
?dist
set.seed(1234)
par(mar=c(0,0,0,0))
x<-rnorm(12,mean=rep(1:3,each=4),sd=.2)
x<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=.2)
set.seed(1234)
x<-rnorm(12,mean=rep(1:3,each=4),sd=.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=.2)
?rep
rep(1:4,4)
plot(x,y,col="blue", pch=19,cex=2)
text(x+.05,y+.05,labels=as.characters(1:12))
text(x+.05,y+.05,labels=as.character(1:12))
dataFrame<-data.frame(x=x,y=y)
dataFrame
dist(dataFrame)
dist(dataFrame)
?dist
d<-dist(dataFrame)
dist(d)
?matrix
d<-matrix(1:12,nrow=3)
d
dist(d)
dataframe
dataFrame
?hclust
distxy<-dist(dataFrame)
hClustering<-hclust(distxy)
plot(hClustering)
sample(1:12)
set.seed(143)
dataMatrix<-as.matrix(dataFrame)[sample(1:12),]
dataMatrix
dataMatrix[1,]
dataMatrix[sample(1:12),]
heatmap(dataMatrix)
dataMatrix
d
heatmap(d)
d<-matrix(sample(1:25),nrow=5)
d
heatmap(d)
?heatmap
?kmeans
install.packages("kernlab")
?data
library("kernlab", lib.loc="~/R/win-library/3.1")
data(spam)
data
class(hCluster)
class(hClusterin)
class(hClustering)
ls()
clear(ls())
rm(ls())
?rm
rm(list=ls())
ls()
data(spam)
ls()
set.seed(3435)
trainIndicator= rbinom(4601,size=1,prob.5)
trainIndicator= rbinom(4601,size=1,prob-.5)
trainIndicator= rbinom(4601,size=1,prob=.5)
?rbinom
table(trainINdicator)
table(trainIndicator)
trainSpam=spam[trainIndicator==1,]
testSpam=spam[trainIndicator==0,]
name(trainSPam)
names(trainSPam)
names(trainSpam)
head(trainSPam)
head(trainSpam)
trainSpam$type
table(trainSpam$type)
?t
trainSpam[1,]
trainSpam[,1]
t(trainSpam[,1:57])
trainSpam$numType=as.numberic(trainSpam$type) -1
trainSpam$numType=as.numeric(trainSpam$type) -1
trainSpam$numType
trainSpam$type
trainSpam$numType>.5
sum(trainSpam$numType != (trainSpam$numType>.5))
?which.min
?which.min(c(1,2,3,4,6,0,3,1,3))
which.min(c(1,2,3,4,6,0,3,1,3))
which.max(c(1,2,3,4,6,0,3,1,3))
?glm
?predict
?glm
predictionModel = glm(numType ~ charDollar, family="binomial", data = trainSpam)
predictionTest = predict(predictionModel, testSpam)
predictionTestt
predictionTest
predictedSpam = rep("nonspam", dim(testSpam)[1])
predictedSpam [predictionModel$fitted >.5]="spam"
predictionModel$fitted
predictionModel$fitted
names(predictionModel)
predictionModel$co
predictionModel$df
predictionModel$fitted
names(predictionModel)
predictionModel[3]
names(predictionModel)
predictionModel$x
predictionModel$dat
predictionModel$fitted
?table
table(testSpam$type)
table(predictedSpam,testSpam$type)
setwd("~/R Files/Reproducible Research/PeerAssessment 1")
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
rm(list=ls())
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
View(data)
data$steps
data$steps[NA]
data$steps[==NA]
data$steps==NA
data$steps=NA
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
data$steps==NA
is.na(data$steps)
head(is.na(data$steps))
data[9991]
data[,9991]
data[9991,]
sum(is.na(data$steps))
length(data[is.na(data$steps)])
length(data[is.na(data$steps),])
head(data[is.na(data$steps),])
head(data[!is.na(data$steps),])
dim(data[!is.na(data$steps),])
dim(data[!is.na(data$steps),])[1]+2304
fixeddata<-data[!is.na(data$steps),]
class(data$date)
class(data[[date]])
class(data[[2]])
class(data[2])
tapply(fixeddata$steps,fixeddata$date,sum)
length(tapply(fixeddata$steps,fixeddata$date,sum))
hist(fixeddata$steps,fixeddata$date,sum)
hist(tapply(fixeddata$steps,fixeddata$date,sum))
a<-tapply(fixeddata$steps,fixeddata$date,sum)
a
colnames(a)
colName(a)
colNames(a)
colnames(a)
fixeddata<-tapply(fixeddata$steps,fixeddata$date,sum)
fixeddata<-fixeddata[!is.na(fixeddata)]
hist(fixeddata)
plot(fixeddata)
?plot
names(fixeddata)
plot(names(fixeddata),fixeddata)
plot(x=names(fixeddata),y=fixeddata)
?as,Date
?as.Date
as.Date(names(fixeddata))
class(names(fixeddata))
as.Date(names(fixeddata))
as.Date(names(fixeddata)[1])
?plot
plot(fixeddata,type="h")
4+5
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
dailytotalsteps<-tapply(fixeddata$steps,fixeddata$date,sum)
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
dailytotalsteps
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
source('~/R Files/Reproducible Research/PeerAssessment 1/Peer Assessment 1.R')
intervalmeansteps<-tapply(fixeddata$steps,fixeddata$interval,mean)
288*5
1440/60
inervalmeansteps
intervalmeansteps
plot(intervalmeansteps,type="l")
max(intervalmeansteps)
intervalmeansteps[max(intervalmeansteps)]
intervalmeansteps[intervalmeansteps==max(intervalmeansteps)]
names(intervalmeansteps[intervalmeansteps==max(intervalmeansteps)])
NAdata<-data[is.na(data$steps),]
View(NAdata)
?split
split(NAdata,NAdata%date)
split(NAdata,NAdata$date)
spli<-split(NAdata,NAdata$date)
length(spli)
spli
names(spli)
head(spli)
NAdata$date
spli
spli<-split(NAdata$date,NAdata$date)
sapply(spli,length)
spli<-sapply(spli,length)
spli
spli[spli==0]
spli[!spli==0]
intervalmeansteps<-tapply(fixeddata$steps,fixeddata$interval,mean)
plot(intervalmeansteps,type="l")
#interval with max steps
intervalwithmaxsteps<-names(intervalmeansteps[intervalmeansteps==max(intervalmeansteps)])
intervalmeansteps
length(intervalmeansteps)
data$steps[1]
class(data$steps[1])
data$steps[is.na(data$steps)]
data$steps[is.na(data$steps)]=0
data<- read.csv(unzip("activity.zip"))
data$steps[is.na(data$steps)]=intervalmeansteps
data$steps[is.na(data$steps)]
sapply(data,data$steps=100)
sapply(data,fun(elt) elt$steps=100)
sapply(data,function(elt) elt$steps=100)
